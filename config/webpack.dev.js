const path = require("path")
const HtmlWebpackPlugin = require("html-webpack-plugin")
const ReactRefreshWebpackPlugin = require("@pmmmwh/react-refresh-webpack-plugin")

module.exports = (env, { mode }) => {
  const isDev = mode === "development"

  return {
    entry: "./src/index.tsx",
    output: {
      filename: "[name].[hash].js",
      path: path.resolve(__dirname, "../dist"),
    },
    devServer: {
      port: 8081,
      contentBase: "dist",
    },
    devtool: isDev && "cheap-eval-module-source-map",
    module: {
      rules: [
        {
          test: /\.(tsx|ts|js)?$/,
          exclude: /node_modules/,
          use: {
            loader: "babel-loader",
            options: {
              envName: mode,
              cacheDirectory: true,
              plugins: [isDev && require.resolve("react-refresh/babel")].filter(Boolean),
            },
          },
        },
        {
          test: /\.css$/,
          use: ["style-loader", "css-loader"],
        },
      ],
    },
    plugins: [
      new HtmlWebpackPlugin({
        inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
        template: "./src/index.html",
      }),
      isDev && new ReactRefreshWebpackPlugin(),
    ].filter(Boolean),
    resolve: {
      extensions: [".mjs", ".js", ".jsx", ".tsx", ".ts"],
    },
  }
}
